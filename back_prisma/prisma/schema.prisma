// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(30)
  password  String    @db.VarChar(200)
  nickname  String    @unique @db.VarChar(30)
  createdAt DateTime  @default(now())
  updateAt  DateTime? @updatedAt

  Followers  User[]    @relation("UserFollow", references: [id])
  Followings User[]    @relation("UserFollow", references: [id])
  Posts      Post[]
  Comments   Comment[]
  Liker      Like[]

  @@map(name: "users")
}

model Post {
  id              Int      @id @default(autoincrement())
  content         String   @db.Text
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
  author          User     @relation(fields: [UserId], references: [id])
  UserId          Int
  retweetedPost   Post?    @relation("Retweet", fields: [RetweetedPostId], references: [id])
  RetweetedPostId Int?

  retweeterPost Post[]       @relation("Retweet")
  Comments      Comment[]
  Images        Image[]
  Hashtags      PostHastag[]
  Liker         Like[]

  @@map(name: "posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  commenter   User @relation(fields: [UserId], references: [id])
  postComment Post @relation(fields: [PostId], references: [id])

  UserId Int
  PostId Int

  @@map(name: "commets")
}

model Image {
  id        Int      @id @default(autoincrement())
  src       String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  postImage Post @relation(fields: [PostId], references: [id])
  PostId    Int

  @@map(name: "images")
}

model Hashtag {
  id        Int          @id @default(autoincrement())
  name      String       @db.VarChar(20)
  createdAt DateTime     @default(now())
  updateAt  DateTime     @updatedAt
  Posts     PostHastag[]

  @@map(name: "hastages")
}

model PostHastag {
  post      Post     @relation(fields: [PostId], references: [id])
  hashtag   Hashtag  @relation(fields: [HashtagId], references: [id])
  PostId    Int
  HashtagId Int
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@id([PostId, HashtagId])
  @@map(name: "posthastags")
}

model Like {
  user   User @relation(fields: [UserId], references: [id])
  post   Post @relation(fields: [PostId], references: [id])
  PostId Int
  UserId Int

  @@id([PostId, UserId])
  @@map(name: "like")
}
